#!/bin/sh
#
# An example hook script to check the commit log message.
# Called by "git commit" with one argument, the name of the file
# that has the commit message.  The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the
# commit.  The hook is allowed to edit the commit message file.
#
# To enable this hook, rename this file to "commit-msg".

# The commit message file is the first argument
commit_msg_file="$1"
commit_message=$(cat "$commit_msg_file")

echo "Validating commit message: $commit_message"

# Check for conventional commit format
if ! echo "$commit_message" | grep -qE "^(feat|fix|docs|style|refactor|test|chore)(\(.+\))?: .+"; then
    echo "Error: Commit message must follow conventional commit format"
    echo "Format: type(scope): description"
    echo "Examples:"
    echo "  feat: add new feature"
    echo "  fix(auth): resolve login issue"
    echo "  docs: update README"
    exit 1
fi

mispelled_words=$(echo "$commit_message" | hunspell -d en_US) 

if [[ $mispelled_words != "" ]]; then
    echo "Error: You have a typo in '${mispelled_words}'"
    exit 1
fi

echo "Commit message validation passed!"
exit 0
